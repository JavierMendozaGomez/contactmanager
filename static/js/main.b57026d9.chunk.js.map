{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","pages/About.js","pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","name","email","phone","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","_ref","data","wrap","_context","prev","next","axios","get","sent","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","_ref2","delete","status","_this2","className","onClick","style","cursor","float","color","bind","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","TextInputGroup","label","placeholder","onChange","onBlur","error","htmlFor","classnames","is-invalid","AddContact","errors","defineProperty","target","onSubmit","_this$state","preventDefault","abrupt","post","history","push","_this2$state","layout_TextInputGroup","EditContact","match","params","put","About","NotFound","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b57026d9.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\nconst reducer = (state, action) => {\n    switch(action.type) {\n        case 'DELETE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact =>\n                contact.id !== action.payload)\n            };\n        case 'ADD_CONTACT':\n            return {\n                ...state,\n                contacts: [action.payload, \n                ...state.contacts]\n            };\n        case 'UPDATE_CONTACT':\n            return {\n                    ...state,\n                    contacts: state.contacts.map(contact =>\n                        contact.id === action.payload.id ? (contact\n                            = action.payload) : contact)\n            };    \n        default:\n            return state;\n    }\n};\n\nexport class Provider extends Component {\n    state = {\n        contacts: [\n            {\n                id: 1,\n                name: 'John Doe',\n                email: 'jdoe@gmail.com',\n                phone: '555-555-555',\n            },\n            {\n                id: 2,\n                name: 'Karen Smith',\n                email: 'karen@gmail.com',\n                phone: '444-444-444'\n            },\n            {\n                id: 3,\n                name: 'Henry Johnson',\n                email: 'henry@gmail.com',\n                phone: '111-111-111',\n            },\n            {\n                id: 4,\n                name: 'Jupiter Saturn',\n                email: 'Saturn@gmail.com',\n                phone: '222-222-222',\n            }\n        ],\n        dispatch: (action) => {\n            this.setState(state => reducer(state, action))\n        }\n    }\n\n\n    async componentDidMount () {\n        const {data} = await axios.get('https://jsonplaceholder.typicode.com/users');\n        this.setState({ contacts: data});\n    }\n    \n    render() {\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer;\n\n","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types'\nimport {Consumer} from '../../context';\nimport axios from 'axios';\n\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onShowClick = (e) => {\n    this.setState({\n      showContactInfo: !this.state.showContactInfo\n    });\n  };\n  \n  onDeleteClick = async (id, dispatch) => {\n    const {status} = await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n    if(status === 200)\n      dispatch({type: 'DELETE_CONTACT', payload: id});\n  };\n\n  render() {\n    const {showContactInfo} = this.state;\n    const {contact} = this.props;\n    const {name, email, phone, id} = contact;\n\n    return (\n      <Consumer>\n        {(value) => {\n          const {dispatch} = value\n          return (\n            <div className=\"card card-body mb-3\">\n                    <h4>\n                      {name}{'  '}\n                      <i \n                        onClick={this.onShowClick}\n                        className=\"fas fa-sort-down\"\n                        style={{cursor: 'pointer'}}\n                      />\n                      <i className=\"fas fa-times\" \n                      style={{cursor: 'pointer', float:\n                      'right', color: 'red'}}\n                      onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                      />\n                      <Link to={`contact/edit/${id}`} >\n                          <i className=\"fas fa-pencil-alt\"\n                           style={{\n                            cursor: 'pointer', \n                            float: 'right', \n                            color: 'black',\n                            marginRight: '1rem'}}></i>\n                      </Link>\n                    </h4>\n                    {showContactInfo ? (\n                    <ul className='list-group'>\n                      <li className='list-group-item'>\n                        Email: {email}\n                      </li>\n                      <li className='list-group-item'> \n                        Phone: {phone}\n                      </li>\n                    </ul>): null}\n                  </div>\n          )\n        }}\n      </Consumer>\n      \n    )\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n\nexport default Contact;","import React, { Component } from 'react'\nimport Contact from './Contact';\nimport {Consumer} from '../../context';\n\nclass Contacts extends Component {\n    render() {\n        return (\n            <Consumer>\n                {value => {\n                    const {contacts} = value;\n                    return (\n                    <React.Fragment>\n                        <h1 className=\"display-4 mb-2\">\n                            <span className=\"text-danger\">Contact List\n                            </span>\n                        </h1>\n                        {contacts.map(contact => (\n                            <Contact\n                                key={contact.id}\n                                contact={contact}\n                            />\n                        ))}\n                    </React.Fragment>                        \n                    )\n                }}\n            </Consumer>\n        );\n    }\n}\n\nexport default Contacts;","import React from 'react'\nimport Proptypes from 'prop-types';\nimport {Link} from 'react-router-dom'\n\nconst Header = (props)  => {\n  const {branding} = props;\n  return (\n      <nav className= \"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n        <div className=\"container\">\n            <a href='/' className='navbar-brand'>\n                {branding}\n            </a>\n            <div>\n                <ul className='navbar-nav mr-auto'>\n                    <li className='nav-item'>\n                        <Link to ='/' className='nav-link'>\n                            <i className=\"fas fa-home\"> Home </i>                        </Link>\n                    </li>\n                    <li className='nav-item'>\n                        <Link to ='/contact/add' className='nav-link'>\n                            <i className=\"fas fa-plus\">Add </i>\n                        </Link>\n                    </li>\n                    <li className='nav-item'>\n                        <Link to ='/about' className='nav-link'>\n                            <i className=\"fas fa-question\"> About </i> \n                        </Link>\n                    </li>                   \n                </ul>\n            </div>\n        </div>\n      </nav>\n  )\n};\n\nHeader.defaultProps = {\n    branding: 'My App'\n};\n\nHeader.propTypes = {\n    branding: Proptypes.string.isRequired\n};\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n    label,\n    name,\n    placeholder,\n    value,\n    type,\n    onChange,\n    onBlur,\n    error\n}) => {\n  return (\n    <div className=\"form-group\">\n        <label htmlFor={name}>{label}</label>\n        <input type={type}\n            name={name}\n            className={classnames('form-control form-control-lg', {\n                'is-invalid': error\n            })}\n            placeholder={placeholder}\n            value={value}\n            onChange={onChange}\n            onBlur={onBlur}\n            error={error}\n        />\n        {error && \n        <div className='invalid-feedback'>\n            {error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n};\n\nexport default TextInputGroup;","import React, { Component } from 'react';\nimport {Consumer} from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    };\n\n    onChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n\n    onSubmit = async(dispatch, e) => {\n        e.preventDefault();\n        const {name, email, phone} = this.state;\n\n        //Check for errors\n        if(name === '') {\n            this.setState({errors: {name: 'Name is required'}})\n            return;\n        }\n\n        if(email === '') {\n            this.setState({errors: {email: 'Email is required'}})\n            return;\n        }\n\n        if(phone === '') {\n            this.setState({errors: {phone: 'Phone is required'}});\n        }\n        const {data, status} = await axios.post('https://jsonplaceholder.typicode.com/users/', {\n            name,\n            email,\n            phone,\n        });\n        if(status === 201){\n\n            dispatch({type: 'ADD_CONTACT', payload: data});\n            \n            this.setState({\n                name: '',\n                email: '',\n                phone: ''\n            });\n\n            this.props.history.push('/');\n        }\n    }\n\n    render() {\n        return (\n        <Consumer>\n            {(value) => {\n                const {dispatch} = value;\n                const {name, email, phone, errors} = this.state;\n                return (\n                    <div className='card mb-3'>\n                    <div className=\"card-header\">\n                        Add Contact</div>\n                        <div className=\"card-body\">\n                            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                <TextInputGroup \n                                    label=\"Name\"\n                                    name=\"name\"\n                                    placeholder=\"Enter name\"\n                                    value={name}\n                                    onChange={this.onChange}\n                                    error={errors.name}\n                                />\n                                <TextInputGroup \n                                    label=\"email\"\n                                    type=\"email\"\n                                    name=\"email\"\n                                    placeholder=\"Enter email\"\n                                    value={email}\n                                    onChange={this.onChange}\n                                    error={errors.email}\n                                />\n                                <TextInputGroup \n                                    label=\"Phone\"\n                                    name=\"phone\"\n                                    placeholder=\"Enter phone\"\n                                    value={phone}\n                                    onChange={this.onChange}\n                                    error={errors.phone}\n                                />\n                                <input type=\"submit\" value=\"Add Contact\" \n                                    className=\"btn btn-light btn-block\"/>                          \n                            </form>\n    \n                        </div>\n                </div>)               \n            }}\n\n        </Consumer>\n        )\n    }\n}\n\nexport default AddContact;","import React, { Component } from 'react';\nimport {Consumer} from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass EditContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    };\n    async componentDidMount() {\n        const {id} = this.props.match.params;\n        const {data} = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n        const {email, name, phone} = data;\n        this.setState({\n            name,\n            email,\n            phone,\n        });\n    }\n\n    onChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n\n     onSubmit = async(dispatch, e) => {\n        const {id} = this.props.match.params;\n        e.preventDefault();\n        const {name, email, phone} = this.state;\n\n        //Check for errors\n        if(name === '') {\n            this.setState({errors: {name: 'Name is required'}})\n            return;\n        }\n\n        if(email === '') {\n            this.setState({errors: {email: 'Email is required'}})\n            return;\n        }\n\n        if(phone === '') {\n            this.setState({errors: {phone: 'Phone is required'}});\n            return\n        }\n        const contact = {\n            id,\n            name,\n            phone,\n            email\n        }\n        const {data, status} = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, contact);\n\n        if(status === 200){\n            dispatch({type: 'UPDATE_CONTACT', payload: data});\n            this.props.history.push('/');\n        }\n    }\n\n    render() {\n        return (\n        <Consumer>\n            {(value) => {\n                const {dispatch} = value;\n                const {name, email, phone, errors} = this.state;\n                return (\n                    <div className='card mb-3'>\n                    <div className=\"card-header\">\n                        Edit Contact</div>\n                        <div className=\"card-body\">\n                            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                <TextInputGroup \n                                    label=\"Name\"\n                                    name=\"name\"\n                                    placeholder=\"Enter name\"\n                                    value={name}\n                                    onChange={this.onChange}\n                                    error={errors.name}\n                                />\n                                <TextInputGroup \n                                    label=\"Email\"\n                                    type=\"email\"\n                                    name=\"email\"\n                                    placeholder=\"Enter email\"\n                                    value={email}\n                                    onChange={this.onChange}\n                                    error={errors.email}\n                                />\n                                <TextInputGroup \n                                    label=\"Phone\"\n                                    name=\"phone\"\n                                    placeholder=\"Enter phone\"\n                                    value={phone}\n                                    onChange={this.onChange}\n                                    error={errors.phone}\n                                />\n                                <input type=\"submit\" value=\"Update Contact\" \n                                    className=\"btn btn-light btn-block\"/>                          \n                            </form>\n    \n                        </div>\n                </div>)               \n            }}\n\n        </Consumer>\n        )\n    }\n}\n\nexport default EditContact;","import React from 'react'\n\nexport default function About (props) {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        About Contact Manager</h1>\n      <h1>{props.match.params.id}</h1>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function NotFound() {\n  return (\n    <div>\n      <h1 className=\"display-4\"> <span className=\"text-danger\"> 404 </span>  Page Not Found</h1>\n      <p className=\"lead\">Sorry, that page does not exist.</p>\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport About from './pages/About';\nimport NotFound from './pages/NotFound.js'\nimport {Provider} from './context.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding='Contact Manager App' />\n            <div className='container'>\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/about/:id\" component={About} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}